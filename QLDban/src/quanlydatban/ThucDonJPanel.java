/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package quanlydatban;

import SubGUI.ThucDonGUI;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.MonAn;
import services.MenuService;

/**
 *
 * @author truon
 */
public class ThucDonJPanel extends javax.swing.JPanel {

    private MenuService menuService = new MenuService();
    private Vector<MonAn> dsMonAn;
    private DefaultTableModel dtmDsMenu;
    private int rowSelected = -1;

    /**
     * Creates new form ChonMonJPanel
     */
    public ThucDonJPanel() {
        initComponents();
        dtmDsMenu = new javax.swing.table.DefaultTableModel(
            new Object[][]{}, // Dữ liệu ban đầu rỗng
            new String[]{"Mã Món", "Tên Món", "Đơn Giá"} // Tên cột
        );
        tblThucDon.setModel(dtmDsMenu);
        hienThiMenuNhaHang();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Container = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblThucDon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnReload = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThucDon = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();

        Container.setBackground(new java.awt.Color(204, 255, 255));
        Container.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Container.setPreferredSize(new java.awt.Dimension(645, 440));

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblThucDon.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblThucDon.setText("Thực Đơn Nhà Hàng");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tìm Món:");

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        btnReload.setBackground(new java.awt.Color(255, 204, 255));
        btnReload.setText("Reload");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiem)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(239, Short.MAX_VALUE)
                        .addComponent(lblThucDon)))
                .addGap(142, 142, 142)
                .addComponent(btnReload)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThucDon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReload))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        tblThucDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Món", "Tên Món", "Giá"
            }
        ));
        jScrollPane1.setViewportView(tblThucDon);

        jPanel2.setBackground(new java.awt.Color(153, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnThem.setBackground(new java.awt.Color(102, 255, 102));
        btnThem.setText("Thêm Món");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 153));
        btnSua.setText("Chỉnh Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 102, 102));
        btnXoa.setText("Xóa Món");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(btnThem)
                .addGap(83, 83, 83)
                .addComponent(btnSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(btnXoa)
                .addGap(77, 77, 77))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ContainerLayout = new javax.swing.GroupLayout(Container);
        Container.setLayout(ContainerLayout);
        ContainerLayout.setHorizontalGroup(
            ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ContainerLayout.setVerticalGroup(
            ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        ThucDonGUI thucDonGUI = new ThucDonGUI();
        thucDonGUI.showWindow(ThucDonJPanel.this);
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        txtTimKiem.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                locThongTin();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                locThongTin();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                locThongTin();
            }
        });
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        rowSelected = tblThucDon.getSelectedRow();
            if (rowSelected != -1) {
                String maMonAn = String.valueOf(tblThucDon.getValueAt(rowSelected, 0));
                int chon = JOptionPane.showConfirmDialog(ThucDonJPanel.this, "Xác nhận xóa?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (chon == JOptionPane.YES_OPTION) {
                    boolean status = menuService.xoaMonAn(maMonAn);
                    if (status) {
                        locThongTin();
                        JOptionPane.showMessageDialog(ThucDonJPanel.this, "Xóa món ăn thành công!");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(ThucDonJPanel.this, "Vui lòng chọn món ăn muốn xóa!");
            }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        rowSelected = tblThucDon.getSelectedRow();
            if (rowSelected != -1) {
                int colSelected = tblThucDon.getSelectedColumn();
                MonAn monAn = new MonAn();
                monAn.setMaMonAn((int) tblThucDon.getValueAt(rowSelected, 0));
                monAn.setTenMonAn((String) tblThucDon.getValueAt(rowSelected, 1));
                monAn.setDonGia((Integer) tblThucDon.getValueAt(rowSelected, 2));
                switch (colSelected) {
                    case 0 -> JOptionPane.showMessageDialog(ThucDonJPanel.this, "Không thể sửa đổi mã!");
                    case 1 -> {
                        String tenMonAn = JOptionPane.showInputDialog(ThucDonJPanel.this, "Tên món ăn: ", monAn.getTenMonAn());
                        if (tenMonAn != null && tenMonAn.trim().length() > 0) {
                            monAn.setTenMonAn(tenMonAn);
                            boolean status = menuService.chinhSuaThongTinMonAn(monAn);
                            if (status) {
                                locThongTin();
                                JOptionPane.showMessageDialog(ThucDonJPanel.this, "Sửa tên món ăn thành công!");
                            }
                        } else if (tenMonAn != null && tenMonAn.trim().equals("")) {
                            JOptionPane.showMessageDialog(ThucDonJPanel.this, "Tên món ăn không được để trống!",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    case 2 -> {
                        String strDonGia = JOptionPane.showInputDialog(ThucDonJPanel.this, "Đơn giá: ", monAn.getDonGia());
                        if (strDonGia != null && strDonGia.trim().length() > 0 && strDonGia.matches("^\\d+$")) {
                            int donGia = Integer.parseInt(strDonGia);
                            monAn.setDonGia(donGia);
                            boolean status = menuService.chinhSuaThongTinMonAn(monAn);
                            if (status) {
                                locThongTin();
                                JOptionPane.showMessageDialog(ThucDonJPanel.this, "Sửa đơn giá món ăn thành công!");
                            }
                        } else if (strDonGia != null && strDonGia.trim().equals("")) {
                            JOptionPane.showMessageDialog(ThucDonJPanel.this, "Đơn giá không được để trống!",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                        } else if (strDonGia != null && strDonGia.trim().length() > 0 && !strDonGia.matches("^\\d+$")) {
                            JOptionPane.showMessageDialog(ThucDonJPanel.this, "Đơn giá nhập không đúng định dạng!",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(ThucDonJPanel.this, "Vui lòng chọn tên món ăn hoặc đơn giá cần sửa!");
            }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        hienThiMenuNhaHang();
    }//GEN-LAST:event_btnReloadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Container;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblThucDon;
    private javax.swing.JTable tblThucDon;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void hienThiMenuMonAn() {
        docDuLieu();
        dtmDsMenu.setRowCount(0);
        for (MonAn monAn : dsMonAn) {
            Vector<Object> vec = new Vector<>();
            vec.add(monAn.getMaMonAn());
            vec.add(monAn.getTenMonAn());
            vec.add(monAn.getDonGia());
            dtmDsMenu.addRow(vec);
        }
    }

    
    private void hienThiMenuMonAn(Vector<MonAn> dsMonAnDaLoc) {
        dtmDsMenu.setRowCount(0);
        for (MonAn monAn : dsMonAnDaLoc) {
            Vector<Object> vec = new Vector<>();
            vec.add(monAn.getMaMonAn());
            vec.add(monAn.getTenMonAn());
            vec.add(monAn.getDonGia());
            dtmDsMenu.addRow(vec);
        }
    }
    
    private void hienThiMenuNhaHang() {
        dtmDsMenu.setRowCount(0);
        dsMonAn = menuService.layDanhSachMenu();
        for (MonAn monAn : dsMonAn) {
            Vector<Object> vec = new Vector<>();
            vec.add(monAn.getMaMonAn());
            vec.add(monAn.getTenMonAn());
            vec.add(monAn.getDonGia());
            dtmDsMenu.addRow(vec);
        }
    }
    
    private void docDuLieu() {
        dsMonAn = menuService.layDanhSachMenu();
    }
    
    public void locThongTin() {
        docDuLieu();
        String duLieuLoc = txtTimKiem.getText();
        Vector<MonAn> dsMonAnDaLoc = new Vector<>();
        for (MonAn monAn : dsMonAn) {
            if (String.valueOf(monAn.getMaMonAn()).toUpperCase().contains(duLieuLoc.trim().toUpperCase())|| monAn.getTenMonAn().toUpperCase().contains(duLieuLoc.trim().toUpperCase()))
                {
                dsMonAnDaLoc.add(monAn);
            }
        }
        if (duLieuLoc.trim().length() > 0) {
            hienThiMenuMonAn(dsMonAnDaLoc);
        } else {
            hienThiMenuMonAn();
        }
    }

}
